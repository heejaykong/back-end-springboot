{"version":3,"file":"js/menu03.fd20c765.js","mappings":"spBAkCA,MAAMA,GAASC,EAAAA,EAAAA,IAAI,IAEnB,SAASC,IACPC,QAAQC,IAAI,cAGd,SAASC,IACPF,QAAQC,IAAI,cAGd,SAASE,EAAYC,GACnBP,EAAOQ,MAAQD,EAAME,OAAOD,MAG9B,SAASE,IACPP,QAAQC,IAAI,mBAGd,SAASO,EAAWC,EAASL,GAC3BJ,QAAQC,IAAI,mBACZD,QAAQC,IAAI,UAAWQ,GACvBT,QAAQC,IAAIG,GACZJ,QAAQC,IAAIG,EAAME,QAClBN,QAAQC,IAAIG,EAAMM,M,gxBCtDpB,MAAMC,EAAc,EAEpB,S,ytBCoCA,MAAMd,GAASC,EAAAA,EAAAA,IAAI,IACbc,GAAUd,EAAAA,EAAAA,IAAI,CAClBe,KAAM,GACNC,QAAS,GACTC,MAAO,IA2CT,SAASC,IACPJ,EAAQP,OAAQP,EAAAA,EAAAA,IAAI,CAClBe,KAAM,GACNC,QAAS,GACTC,MAAO,I,OA3CXE,EAAAA,EAAAA,IAAMpB,GAAQ,CAACqB,EAAWC,KACxBnB,QAAQoB,MAAM,gBACdpB,QAAQC,IAAI,YAAaiB,EAAW,YAAaC,GACjDnB,QAAQqB,eAIVJ,EAAAA,EAAAA,IACEL,GACA,CAACU,EAAYC,KACXvB,QAAQoB,MAAM,iBACdpB,QAAQC,IAAI,cAAeqB,GAC3BtB,QAAQC,IAAI,cAAesB,GAC3BvB,QAAQqB,aAEV,CAAEG,MAAM,KAIVP,EAAAA,EAAAA,KACE,IAAML,EAAQP,MAAMQ,OACpB,CAACY,EAASC,KACR1B,QAAQoB,MAAM,sBACdpB,QAAQC,IAAI,WAAYwB,GACxBzB,QAAQC,IAAI,WAAYyB,GACxB1B,QAAQqB,eAKZJ,EAAAA,EAAAA,IAAM,CAACpB,EAAQe,IAAU,EAAEM,EAAWI,IAAaH,EAAWI,MAC5DvB,QAAQoB,MAAM,kBACdpB,QAAQC,IAAI,OAAQ,CAACiB,EAAWI,IAChCtB,QAAQC,IAAI,OAAQ,CAACkB,EAAWI,IAChCvB,QAAQqB,aAEV,CAAEG,MAAM,I,+5BClFR,MAAMb,EAAc,EAEpB","sources":["webpack://front-end-vue/./src/views/menu03/Exam01EventHandling.vue","webpack://front-end-vue/./src/views/menu03/Exam01EventHandling.vue?efde","webpack://front-end-vue/./src/views/menu03/Exam02Watch.vue","webpack://front-end-vue/./src/views/menu03/Exam02Watch.vue?3b92"],"sourcesContent":["<template>\r\n  <div class=\"card\">\r\n    <div class=\"card-header\">Exam01EventHandling</div>\r\n    <div class=\"card-body\">\r\n\r\n      <div>\r\n        <h6>[Event Handling]</h6>\r\n        <button @click=\"handleBtn1\" class=\"btn btn-info btn-sm mr-2\">버튼1</button>\r\n        <button @click=\"handleBtn2('hey sup', $event)\" class=\"btn btn-info btn-sm mr-2\">버튼2</button>\r\n      </div>\r\n      \r\n      <div>\r\n        <h6>[DOM Event 객체 참조]</h6>\r\n        <!-- <input v-model=\"userId\" @keyup=\"handleInput($event)\" type=\"text\" name=\"userId\" /> -->\r\n        <input :value=\"userId\" @keyup=\"handleInput($event)\" type=\"text\" name=\"userId\" />\r\n        <br />\r\n        입력 내용: {{ userId }}\r\n      </div>\r\n\r\n      <div>\r\n        <h6>[이벤트 수식어 사용]</h6>\r\n        <a href=\"https://vuejs.org/guide/introduction.html\" @click.prevent=\"handleLink\">링크</a>\r\n        <form action=\"https://vuejs.org/guide/introduction.html\" @submit.prevent=\"handleForm\">\r\n          <input type=\"text\" v-model=\"userId\" /> <br />\r\n          <input type=\"submit\" value=\"제출\" class=\"btn btn-success btn-sm mt-2\" />\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\n// 반응형 속성 선언\r\nimport { ref } from \"vue\";\r\nconst userId = ref(\"\");\r\n\r\nfunction handleLink() {\r\n  console.log(\"handleLink\");\r\n}\r\n\r\nfunction handleForm() {\r\n  console.log(\"handleForm\");\r\n}\r\n\r\nfunction handleInput(event) {\r\n  userId.value = event.target.value;\r\n}\r\n\r\nfunction handleBtn1() {\r\n  console.log(\"handleBtn1() 실행\");\r\n  // console.log(event); // 일반 js코드가 아니고 여긴 vue 컴포넌트의 메소드이기 때문에, 감히 일반js처럼 쓰지 말란 의미에서 취소선 그어짐.\r\n}\r\nfunction handleBtn2(message, event) {\r\n  console.log(\"handleBtn2() 실행\");\r\n  console.log(\"message\", message);\r\n  console.log(event);\r\n  console.log(event.target);\r\n  console.log(event.type);\r\n}\r\n</script>\r\n\r\n<style scoped></style>\r\n","import script from \"./Exam01EventHandling.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Exam01EventHandling.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n  <div class=\"card\">\r\n    <div class=\"card-header\">Exam02Watch</div>\r\n    <div class=\"card-body\">\r\n      <div class=\"form-group row\">\r\n        <label class=\"col-sm-2 col-form-label\">UserId</label>\r\n        <div class=\"col-sm-10\">\r\n          <input type=\"text\" class=\"form-control\" v-model=\"userId\" />\r\n        </div>\r\n      </div>\r\n      <hr />\r\n      <form>\r\n        <div class=\"form-group row\">\r\n          <label class=\"col-sm-2 col-form-label\">Name</label>\r\n          <div class=\"col-sm-10\">\r\n            <input type=\"text\" class=\"form-control\" v-model=\"product.name\" />\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group row\">\r\n          <label class=\"col-sm-2 col-form-label\">Company</label>\r\n          <div class=\"col-sm-10\">\r\n            <input type=\"text\" class=\"form-control\" v-model=\"product.company\" />\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group row\">\r\n          <label class=\"col-sm-2 col-form-label\">Price</label>\r\n          <div class=\"col-sm-10\">\r\n            <input type=\"number\" class=\"form-control\" v-model.number=\"product.price\" />\r\n          </div>\r\n        </div>\r\n      </form>\r\n      <hr />\r\n      <button @click=\"handleButton\" class=\"btn btn-info btn-sm\">product 객체 변경</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, watch } from \"vue\";\r\n\r\n// 반응형 속성 선언\r\nconst userId = ref(\"\");\r\nconst product = ref({\r\n  name: \"\",\r\n  company: \"\",\r\n  price: 0,\r\n});\r\n\r\n// 값 타입의 반응형속성 감시 설정하기\r\nwatch(userId, (newUserId, oldUserId) => {\r\n  console.group(\"userId 변경 감시\");\r\n  console.log(\"newUserId\", newUserId, \"oldUserId\", oldUserId);\r\n  console.groupEnd();\r\n});\r\n\r\n// 객체 타입의 반응형속성 감시 설정하기\r\nwatch(\r\n  product,\r\n  (newProduct, oldProduct) => {\r\n    console.group(\"product 변경 감시\");\r\n    console.log(\"newProduct:\", newProduct);\r\n    console.log(\"oldProduct:\", oldProduct);\r\n    console.groupEnd();\r\n  },\r\n  { deep: true },\r\n);\r\n\r\n// 객체 타입의 일부 반응형속성만 감시 설정하기\r\nwatch(\r\n  () => product.value.name,\r\n  (newName, oldName) => {\r\n    console.group(\"product 일부속성 변경 감시\");\r\n    console.log(\"newName:\", newName);\r\n    console.log(\"oldName:\", oldName);\r\n    console.groupEnd();\r\n  },\r\n);\r\n\r\n// 멀티 반응형속성을 감시 설정하기\r\nwatch([userId, product], ([newUserId, newProduct],[oldUserId, oldProduct])=>{\r\n  console.group(\"멀티 반응형속성 변경 감시\");\r\n  console.log(\"new:\", [newUserId, newProduct]);\r\n  console.log(\"old:\", [oldUserId, oldProduct]);\r\n  console.groupEnd();\r\n},\r\n{ deep: true },\r\n);\r\n\r\nfunction handleButton() {\r\n  product.value = ref({\r\n    name: \"\",\r\n    company: \"\",\r\n    price: 0,\r\n  });\r\n}\r\n</script>\r\n\r\n<style scoped></style>\r\n","import script from \"./Exam02Watch.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Exam02Watch.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["userId","ref","handleLink","console","log","handleForm","handleInput","event","value","target","handleBtn1","handleBtn2","message","type","__exports__","product","name","company","price","handleButton","watch","newUserId","oldUserId","group","groupEnd","newProduct","oldProduct","deep","newName","oldName"],"sourceRoot":""}