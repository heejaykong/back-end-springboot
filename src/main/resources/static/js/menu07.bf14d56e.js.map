{"version":3,"file":"js/menu07.bf14d56e.js","mappings":"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","sources":["webpack://front-end-vue/./node_modules/js-file-download/file-download.js","webpack://front-end-vue/./src/apis/board.js","webpack://front-end-vue/./src/components/menu02/ModalDialogTemplate.vue","webpack://front-end-vue/./src/components/menu02/ModalDialogTemplate.vue?55f4","webpack://front-end-vue/./src/components/menu07/AlertDialog.vue","webpack://front-end-vue/./src/views/menu07/Exam01AsyncControl.vue","webpack://front-end-vue/./src/views/menu07/Exam01AsyncControl.vue?f41b","webpack://front-end-vue/./src/views/menu07/auth/Join.vue","webpack://front-end-vue/./src/views/menu07/auth/Join.vue?8402","webpack://front-end-vue/./src/views/menu07/auth/Login.vue","webpack://front-end-vue/./src/views/menu07/auth/Login.vue?70bd","webpack://front-end-vue/./src/views/menu07/board/List.vue","webpack://front-end-vue/./src/views/menu07/board/List.vue?5f9a","webpack://front-end-vue/./src/views/menu07/board/Read.vue","webpack://front-end-vue/./src/views/menu07/board/Read.vue?a213","webpack://front-end-vue/./src/views/menu07/board/UpdateForm.vue","webpack://front-end-vue/./src/views/menu07/board/UpdateForm.vue?f0df","webpack://front-end-vue/./src/views/menu07/board/WriteForm.vue","webpack://front-end-vue/./src/views/menu07/board/WriteForm.vue?b13f"],"sourcesContent":["module.exports = function(data, filename, mime, bom) {\n    var blobData = (typeof bom !== 'undefined') ? [bom, data] : [data]\n    var blob = new Blob(blobData, {type: mime || 'application/octet-stream'});\n    if (typeof window.navigator.msSaveBlob !== 'undefined') {\n        // IE workaround for \"HTML7007: One or more blob URLs were\n        // revoked by closing the blob for which they were created.\n        // These URLs will no longer resolve as the data backing\n        // the URL has been freed.\"\n        window.navigator.msSaveBlob(blob, filename);\n    }\n    else {\n        var blobURL = (window.URL && window.URL.createObjectURL) ? window.URL.createObjectURL(blob) : window.webkitURL.createObjectURL(blob);\n        var tempLink = document.createElement('a');\n        tempLink.style.display = 'none';\n        tempLink.href = blobURL;\n        tempLink.setAttribute('download', filename);\n\n        // Safari thinks _blank anchor are pop ups. We only want to set _blank\n        // target if the browser does not support the HTML5 download attribute.\n        // This allows you to download files in desktop safari if pop up blocking\n        // is enabled.\n        if (typeof tempLink.download === 'undefined') {\n            tempLink.setAttribute('target', '_blank');\n        }\n\n        document.body.appendChild(tempLink);\n        tempLink.click();\n\n        // Fixes \"webkit blob resource error 1\"\n        setTimeout(function() {\n            document.body.removeChild(tempLink);\n            window.URL.revokeObjectURL(blobURL);\n        }, 200)\n    }\n}\n","// Rest API와 통신하는 Board 모듈\r\nimport axios from \"axios\";\r\nimport apiAuth from \"@/apis/auth\";\r\n\r\n// 게시물 목록 요청\r\nasync function getBoardList(pageNo = 1) {\r\n  let response = null;\r\n  try {\r\n    // 지금부터 백엔드 코드와 함께 보면 됨.\r\n    // 보니까 int pageNo를 넘겨야 하네?\r\n    // 그러니까 params를 담아 보내는 것임.\r\n    // axios가 뱉어내는 객체는, 한번 예쁘게 포장된 response 객체임.\r\n    // 그래서 response.data로 진짜 데이터를 얻어올 수 있는 거임.\r\n    response = await axios.get(\"/board/list\", { params: { pageNo } /* { pageNo: pageNo } */ });\r\n    // console.log(response);\r\n    // 2022. 05. 31.(화) 실습내용\r\n    return { result: \"success\", data: response.data }; // 이렇게 바꿈\r\n  } catch (error) {\r\n    console.log(error);\r\n    if (error.response) {\r\n      // 서버 응답이 '있다'!\r\n      if (error.response.status === 403) {\r\n        if (await apiAuth.refreshToken()) {\r\n          console.log(\"refreshToken~~\");\r\n          // 얘가 true일 경우에만 아래 두줄. (위 get로직 복붙한거임)\r\n          response = await axios.get(\"/board/list\", { params: { pageNo } });\r\n          return { result: \"success\", data: response.data };\r\n          // 또는 재귀호출을 할 순 있는데 좋은 생각은 아니다.\r\n          // await getBoardList();\r\n        } else {\r\n          console.log(\"i am else\");\r\n        }\r\n      }\r\n    } else {\r\n      // 서버 응답이 아예 없으면 네트워크 오류란 의미!\r\n      return { result: \"fail-network\" };\r\n    }\r\n  }\r\n\r\n  // 2022. 05. 31.(화) 실습내용때 아래 내용은 지움\r\n  // if (response !== null) {\r\n  //   return response.data; // 위에서 말했듯이, 백엔드에서 넘겨준 값의 json이 response.data안에 있음.\r\n  // } else {\r\n  //   return null;\r\n  // }\r\n}\r\n\r\n// 게시물 작성하기(multipart로 구성해서 전달)\r\nasync function createBoard(multipartFormData) {\r\n  let dbBoard = null;\r\n  try {\r\n    const response = await axios.post(\"/board/\", multipartFormData);\r\n    dbBoard = response.data;\r\n  } catch (error) {\r\n    if (error.response.status === 403) {\r\n      if (await apiAuth.refreshToken()) {\r\n        // 얘가 true일 경우에만 아래 두줄. (위 get로직 복붙한거임)\r\n        const response = await axios.post(\"/board/\", multipartFormData);\r\n        dbBoard = response.data;\r\n      }\r\n    }\r\n  }\r\n  return dbBoard;\r\n}\r\n\r\n// 게시물 하나 가져오기\r\nasync function readBoard(bno, hit) {\r\n  let board = null;\r\n  try {\r\n    const response = await axios.get(`/board/${bno}?hit=${hit}`); // hit는 쿼리스트링으로 가져올 수 있음.\r\n    board = response.data;\r\n  } catch (error) {\r\n    if (error.response.status === 403) {\r\n      if (await apiAuth.refreshToken()) {\r\n        // 얘가 true일 경우에만 아래 두줄. (위 try로직 복붙한거임)\r\n        const response = await axios.get(`/board/${bno}?hit=${hit}`); // hit는 쿼리스트링으로 가져올 수 있음.\r\n        board = response.data;\r\n      }\r\n    }\r\n  }\r\n  return board;\r\n}\r\n\r\n// 게시물 수정하기(multipart로 구성해서 전달)\r\nasync function updateBoard(multipartFormData) {\r\n  let dbBoard = null;\r\n  try {\r\n    const response = await axios.put(`/board/`, multipartFormData);\r\n    dbBoard = response.data;\r\n  } catch (error) {\r\n    if (error.response.status === 403) {\r\n      if (await apiAuth.refreshToken()) {\r\n        // 얘가 true일 경우에만 아래 두줄. (위 try로직 복붙한거임)\r\n        const response = await axios.put(`/board/`, multipartFormData);\r\n        dbBoard = response.data;\r\n      }\r\n    }\r\n  }\r\n  return dbBoard;\r\n}\r\n\r\n// 파일 다운로드\r\nasync function downloadBoardAttach(bno) {\r\n  let blob = null;\r\n\r\n  try {\r\n    const response = await axios.get(`/board/battach/${bno}`, { responseType: \"blob\" }); // 다운로드받는 대상이 정확히 blob타입이라는 걸 명시하는 옵션임.\r\n    blob = response.data; // 그래야 blob타입의 데이터를 넣을 수 있다.\r\n  } catch (error) {\r\n    if (error.response.status === 403) {\r\n      if (await apiAuth.refreshToken()) {\r\n        // 얘가 true일 경우에만 아래 두줄. (위 try로직 복붙한거임)\r\n        const response = await axios.get(`/board/battach/${bno}`, { responseType: \"blob\" }); // 다운로드받는 대상이 정확히 blob타입이라는 걸 명시하는 옵션임.\r\n        blob = response.data; // 그래야 blob타입의 데이터를 넣을 수 있다.\r\n      }\r\n    }\r\n  }\r\n  return blob;\r\n}\r\n\r\n// 게시물 삭제\r\nasync function deleteBoard(bno) {\r\n  let result = null;\r\n\r\n  try {\r\n    const response = await axios.delete(`/board/${bno}`);\r\n    result = response.data.result; // 백엔드에서 넘겨준 result값. (\"success\")\r\n  } catch (error) {\r\n    if (error.response.status === 403) {\r\n      if (await apiAuth.refreshToken()) {\r\n        // 얘가 true일 경우에만 아래 두줄. (위 try로직 복붙한거임)\r\n        const response = await axios.delete(`/board/${bno}`);\r\n        result = response.data.result; // 백엔드에서 넘겨준 result값. (\"success\")\r\n      }\r\n    }\r\n  }\r\n  return result;\r\n}\r\n\r\n// 내보내기\r\nexport default {\r\n  getBoardList,\r\n  createBoard,\r\n  readBoard,\r\n  updateBoard,\r\n  downloadBoardAttach,\r\n  deleteBoard,\r\n};\r\n","<template>\r\n  <Transition name=\"modal\">\r\n    <div class=\"modal-mask\">\r\n      <div class=\"modal-wrapper\">\r\n        <div class=\"modal-container\" :style=\"$attrs.style\">\r\n          <div class=\"modal-header\">\r\n            <!-- slot -->\r\n            <slot name=\"header\">제목</slot>\r\n          </div>\r\n\r\n          <div class=\"modal-body\">\r\n            <!-- slot -->\r\n            <slot name=\"body\">내용</slot>\r\n          </div>\r\n\r\n          <div class=\"modal-footer\">\r\n            <!-- slot -->\r\n            <slot name=\"footer\">\r\n              <button class=\"modal-default-button\" @click=\"$emit('close')\">닫기</button>\r\n            </slot>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </Transition>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  inheritAttrs: false\r\n}\r\n</script>\r\n\r\n<script setup>\r\n</script>\r\n\r\n<style scoped>\r\n.modal-mask {\r\n  position: fixed;\r\n  z-index: 9998;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  display: table;\r\n  transition: opacity 0.3s ease;\r\n}\r\n\r\n.modal-wrapper {\r\n  display: table-cell;\r\n  vertical-align: middle;\r\n}\r\n\r\n.modal-container {\r\n  width: 300px;\r\n  margin: 0px auto;\r\n  padding: 20px 30px;\r\n  background-color: #fff;\r\n  border-radius: 2px;\r\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.33);\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.modal-header h3 {\r\n  margin-top: 0;\r\n  color: #42b983;\r\n}\r\n\r\n.modal-body {\r\n  margin: 20px 0;\r\n}\r\n\r\n.modal-default-button {\r\n  float: right;\r\n}\r\n\r\n/*\r\n * The following styles are auto-applied to elements with\r\n * transition=\"modal\" when their visibility is toggled\r\n * by Vue.js.\r\n *\r\n * You can easily play with the modal transition by editing\r\n * these styles.\r\n */\r\n\r\n.modal-enter-from {\r\n  opacity: 0;\r\n}\r\n\r\n.modal-leave-to {\r\n  opacity: 0;\r\n}\r\n\r\n.modal-enter-from .modal-container,\r\n.modal-leave-to .modal-container {\r\n  -webkit-transform: scale(1.1);\r\n  transform: scale(1.1);\r\n}\r\n</style>\r\n","import { render } from \"./ModalDialogTemplate.vue?vue&type=template&id=c800ee20&scoped=true\"\nimport script from \"./ModalDialogTemplate.vue?vue&type=script&lang=js\"\nexport * from \"./ModalDialogTemplate.vue?vue&type=script&lang=js\"\n\nimport \"./ModalDialogTemplate.vue?vue&type=style&index=0&id=c800ee20&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\osstem\\\\projects\\\\node-workspace\\\\front-end-vue\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-c800ee20\"]])\n\nexport default __exports__","import script from \"./AlertDialog.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./AlertDialog.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n  <div class=\"card\">\r\n    <div class=\"card-header\">Exam01AsyncControl</div>\r\n    <div class=\"card-body\">\r\n      <div>\r\n        <button @click=\"handleBtn1\" class=\"btn btn-info btn-sm mr-2\">비동기 작업1</button>\r\n        <button @click=\"handleBtn2\" class=\"btn btn-info btn-sm mr-2\">비동기 작업2</button>\r\n      </div>\r\n\r\n      <div v-if=\"!loading\" class=\"mt-3\">\r\n        <div>result: {{ result }}</div>\r\n      </div>\r\n\r\n      <div v-if=\"loading\" class=\"mt-3 spinner-border text-info\" role=\"status\">\r\n        <span class=\"sr-only\">Loading...</span>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref } from \"vue\";\r\nconst result = ref(\"\");\r\nconst loading = ref(false);\r\n\r\nfunction work() {\r\n  // axios 내부를 흉내낸 메소드로 보면 됨.\r\n  const promise = new Promise((resolve, reject) => {\r\n    setTimeout(() => {\r\n      resolve(\"value\");\r\n    }, 3000);\r\n  });\r\n  return promise;\r\n}\r\n// 방법1: then()문 쓰는 방법\r\nfunction handleBtn1() {\r\n  loading.value = true;\r\n  work()\r\n    .then((data) => {\r\n      result.value = data;\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n    })\r\n    .finally(() => {\r\n      loading.value = false;\r\n    });\r\n}\r\n\r\n// 방법2: async-await문 쓰는 방법\r\nasync function handleBtn2() {\r\n  try {\r\n    loading.value = true;\r\n    const data = await work();\r\n    result.value = data;\r\n  } catch(error) {\r\n    console.log(error);\r\n  } finally {\r\n    loading.value = false;\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped></style>\r\n","import script from \"./Exam01AsyncControl.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Exam01AsyncControl.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n  <div class=\"card\">\r\n    <div class=\"card-header\">Join</div>\r\n    <div class=\"card-body\">\r\n      <div class=\"form-group\">\r\n        <label class=\"form-label\">User ID</label>\r\n        <input type=\"text\" class=\"form-control\" v-model=\"user.id\" />\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label class=\"form-label\">User Name</label>\r\n        <input type=\"text\" class=\"form-control\" v-model=\"user.name\" />\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label class=\"col-form-label\">User Password</label>\r\n        <input type=\"text\" class=\"form-control\" v-model=\"user.password\" />\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label class=\"col-form-label\">User Role</label>\r\n        <select class=\"form-control\" name=\"mrole\" v-model=\"user.role\">\r\n          <option value=\"ROLE_ADMIN\">ROLE_ADMIN</option>\r\n          <option value=\"ROLE_MANAGER\">ROLE_MANAGER</option>\r\n          <option value=\"ROLE_USER\" selected>ROLE_USER</option>\r\n        </select>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label class=\"col-form-label\">User Email</label>\r\n        <input type=\"text\" class=\"form-control\" v-model=\"user.email\" />\r\n      </div>\r\n      <button class=\"btn btn-info btn-sm\" v-on:click=\"handleJoin\">가입</button>\r\n    </div>\r\n\r\n    <AlertDialog\r\n      @close=\"alertDialog = false\"\r\n      v-if=\"alertDialog\"\r\n      :message=\"alertDialogMessage\"\r\n      :loading=\"loading\" />\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { reactive, ref } from \"vue\";\r\nimport apiAuth from \"@/apis/auth\";\r\nimport AlertDialog from \"@/components/menu07/AlertDialog.vue\";\r\n\r\nconst alertDialog = ref(false);\r\nconst alertDialogMessage = ref(\"\");\r\nconst loading = ref(false);\r\n\r\nconst user = reactive({\r\n  id: \"user\",\r\n  name: \"사용자\",\r\n  password: \"12345\",\r\n  role: \"ROLE_USER\",\r\n  email: \"user@mycompany.com\",\r\n});\r\n\r\nasync function handleJoin() {\r\n  alertDialog.value = true;\r\n  loading.value = true;\r\n  const result = await apiAuth.join(user);\r\n  if (result === \"success\") {\r\n    console.log(result);\r\n    alertDialogMessage.value = \"회원가입 성공\";\r\n  } else if (result === \"dupliacated\") {\r\n    console.log(result);\r\n    alertDialogMessage.value = \"회원가입 실패: 아이디 중복\";\r\n  } else if (result === \"fail\") {\r\n    console.log(result);\r\n    alertDialogMessage.value = \"회원가입 실패: 서버측 오류\";\r\n  } else {\r\n    // 'fail-network'일때\r\n    console.log(result);\r\n    alertDialogMessage.value = \"회원가입 실패: 네트워크 오류\";\r\n  }\r\n  \r\n  loading.value = false;\r\n}\r\n</script>\r\n\r\n<style scoped></style>\r\n","import script from \"./Join.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Join.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n  <div class=\"card\">\r\n    <div class=\"card-header\">로그인</div>\r\n    <div class=\"card-body\">\r\n      <!-- **vuex를 이용해서!** 로그인이 안되었다면 로그인버튼을 보여줘야 함 -->\r\n      <div v-if=\"store.state.userId === ''\">\r\n        <div class=\"form-group\">\r\n          <label class=\"form-label\">User ID</label>\r\n          <input type=\"text\" class=\"form-control\" id=\"userId\" v-model=\"user.id\" />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"userPassword\" class=\"col-form-label\">User Password</label>\r\n          <input type=\"text\" class=\"form-control\" v-model=\"user.password\" />\r\n        </div>\r\n        <button class=\"btn btn-info btn-sm\" v-on:click=\"handleLogin\">로그인</button>\r\n      </div>\r\n\r\n      <!-- 로그인이 되었다면 로그아웃버튼을 보여줘야 하고 -->\r\n      <div v-if=\"store.state.userId !== ''\">\r\n        <button class=\"btn btn-info btn-sm mr-2\" v-on:click=\"handleLogout\">로그아웃</button>\r\n      </div>\r\n    </div>\r\n\r\n    <AlertDialog @close=\"alertDialog=false\" v-if=\"alertDialog\" :message=\"alertDialogMessage\" :loading=\"loading\"/>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport apiAuth from \"@/apis/auth\";\r\nimport { reactive, ref } from \"vue\";\r\nimport { useRouter } from \"vue-router\";\r\nimport { useStore } from \"vuex\";\r\nimport AlertDialog from \"@/components/menu07/AlertDialog.vue\";\r\nconst store = useStore(); // 이렇게 안하고 걍 템플릿에 바로 $store 해도 됨.\r\nconst router = useRouter();\r\n\r\nconst alertDialog = ref(false);\r\nconst alertDialogMessage = ref(\"\");\r\nconst loading = ref(false);\r\n\r\nconst user = reactive({\r\n  id: \"user\",\r\n  password: \"12345\",\r\n});\r\n\r\nasync function handleLogin() {\r\n  alertDialog.value = true;\r\n  loading.value = true;\r\n\r\n  const result = await apiAuth.login(user);\r\n  if (result === \"success\") {\r\n    alertDialog.value = false;\r\n    // router.push(`/menu07/auth/........`); 로그인 후 어디로 갈지는 알아서 해라ㅎ\r\n  } else if (result === \"fail-401\") {\r\n    alertDialogMessage.value = \"로그인 실패: 아이디 또는 비밀번호가 틀림\";\r\n  } else {\r\n    //'fail-network'일 경우\r\n    alertDialogMessage.value = \"로그인 실패: 네트워크 오류\";\r\n  }\r\n\r\n  loading.value = false;\r\n}\r\nasync function handleLogout() {\r\n  await apiAuth.logout();\r\n}\r\n</script>\r\n\r\n<style scoped></style>\r\n","import script from \"./Login.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Login.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n  <div class=\"card\">\r\n    <div class=\"card-header\">List</div>\r\n    <div class=\"card-body\">\r\n      <!--아래 v-if부분 주석해보고 실행시켜보고, 주석풀고도 실행시켜보자.-->\r\n      <div v-if=\"page\">\r\n        <div class=\"mb-3\">\r\n          <router-link to=\"/menu07/board/writeform\" class=\"btn btn-info btn-sm\">Board 생성</router-link>\r\n        </div>\r\n\r\n        <table class=\"table table-sm table-striped table-bordered\">\r\n          <thead>\r\n            <tr>\r\n              <th class=\"text-center\" style=\"width: 70px\">번호</th>\r\n              <th class=\"text-center\">제목</th>\r\n              <th class=\"text-center\" style=\"width: 90px\">글쓴이</th>\r\n              <th class=\"text-center\" style=\"width: 120px\">날짜</th>\r\n              <th class=\"text-center\" style=\"width: 70px\">조회수</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr v-for=\"board of page.boards\" :key=\"board.bno\">\r\n              <td class=\"text-center\">{{ board.bno }}</td>\r\n              <td>\r\n                <router-link :to=\"`/menu07/board/read?bno=${board.bno}&pageNo=${page.pager.pageNo}&hit=true`\">{{ board.btitle }}</router-link>\r\n              </td>\r\n              <td class=\"text-center\">{{ board.mid }}</td>\r\n              <td class=\"text-center\">{{ new Date(board.bdate).toLocaleDateString() }}</td>\r\n              <td class=\"text-center\">{{ board.bhitcount }}</td>\r\n            </tr>\r\n            <tr>\r\n              <td colspan=\"5\" class=\"text-center\">\r\n                <button @click=\"changePageNo(1)\" class=\"btn btn-outline-primary btn-sm mr-1\">처음</button>\r\n                <button v-if=\"page.pager.pageNo > 1\" @click=\"changePageNo(page.pager.startPageNo - 1)\" class=\"btn btn-outline-info btn-sm mr-1\">\r\n                  이전\r\n                </button>\r\n\r\n                <!-- <button\r\n                  @click=\"changePageNo(pageNo)\"\r\n                  v-for=\"pageNo in range(page.pager.startPageNo, page.pager.endPageNo)\"\r\n                  :key=\"pageNo\"\r\n                  class=\"btn btn-sm mr-1\"\r\n                  :class=\"{ 'btn-outline-success': pageNo !== page.pager.pageNo, 'btn-danger': pageNo === page.pager.pageNo }\"\r\n                >\r\n                  {{ pageNo }}\r\n                </button> -->\r\n                <button\r\n                  @click=\"changePageNo(pageNo)\"\r\n                  v-for=\"pageNo in range(page.pager.startPageNo, page.pager.endPageNo)\"\r\n                  :key=\"pageNo\"\r\n                  class=\"btn btn-sm mr-1\"\r\n                  :class=\"pageNo === page.pager.pageNo ? 'btn-danger' : 'btn-outline-success'\"\r\n                >\r\n                  {{ pageNo }}\r\n                </button>\r\n                <button\r\n                  v-if=\"page.pager.pageNo < page.pager.totalGroupNo\"\r\n                  @click=\"changePageNo(page.pager.endPageNo + 1)\"\r\n                  class=\"btn btn-outline-info btn-sm mr-1\"\r\n                >\r\n                  다음\r\n                </button>\r\n                <button @click=\"changePageNo(page.pager.totalPageNo)\" class=\"btn btn-outline-primary btn-sm mr-1\">맨끝</button>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport apiBoard from \"@/apis/board\";\r\nimport { ref, watch } from \"vue\";\r\nimport { useRoute, useRouter } from \"vue-router\";\r\nimport { useStore } from \"vuex\";\r\nconst route = useRoute(); // 뭔지 모르겠다면 menu01/exam07view 실습코드를 보면 다시 기억이 날 것이다\r\nconst router = useRouter();\r\nconst store = useStore();\r\nif (store.state.userId === \"\") {\r\n  router.push(\"/menu07/auth/login\"); // 실제 board리스트가 잠깐 깜빡 나타났다가 로그인창으로 넘어가는 건 바람직하지 않다. 그래서 바로 useStore로 DOM을 애시당초 state의 userId 여부에 따라 그릴지말지를 결정해버릴 것이다.\r\n}\r\n\r\n// 템플릿에 바인딩하기 위한 반응형 속성 선언\r\nconst page = ref(null); // page가 null인 상태에선 바인딩을 할 수 없을 것임. getBoardList()는 비동기 메소드이기 때문에, page가 비로소 null값이 아닐 때 DOM을 랜더링해야 한다.\r\n\r\n// 라우팅 시, 전달된 QueryString에서 pageNo값을 읽기.\r\nlet pageNo = route.query.pageNo;\r\nif (pageNo === \"undefined\") {\r\n  // 존재하지 않을 경우 디폴트값 설정\r\n  pageNo = 1;\r\n}\r\n\r\n// Rest API와 통신해서 page 정보를(게시물목록+Pager객체)를 page속성에 저장하기.\r\nasync function getBoardList(pageNo) {\r\n  const result = await apiBoard.getBoardList(pageNo); // apiBoard.getBoardList()가 async이기 때문에 호출할때 반드시 await가 있어야 함.\r\n  //2022. 05. 31.(화)\r\n  if (result.result === \"success\") {\r\n    page.value = result.data;\r\n  } else {\r\n    router.push(\"/menu07/auth/login\");\r\n  }\r\n}\r\ngetBoardList(pageNo); // 무조건 화면 로딩 시 호출됨\r\n\r\nfunction range(start, end) {\r\n  const numbers = [];\r\n  for (let i = start; i <= end; i++) {\r\n    numbers.push(i);\r\n  }\r\n  return numbers;\r\n}\r\n\r\nfunction changePageNo(pageNo) {\r\n  router.push(`/menu07/board/list?pageNo=${pageNo}`);\r\n}\r\n\r\nwatch(route, (newUrl, oldUrl) => {\r\n  // console.log(\"newUrl\")\r\n  // console.log(newUrl)\r\n  // 다른 경로 말고 이 경로일 때만 처리하란 소리\r\n  if (newUrl.path === \"/menu07/board/list\") {\r\n    // pageNo가 쿼리스트링에 존재하냐?\r\n    if (newUrl.query.pageNo) {\r\n      getBoardList(newUrl.query.pageNo);\r\n    } else {\r\n      getBoardList(1);\r\n    }\r\n  }\r\n});\r\n\r\nfunction handleBoardClick(bno) {\r\n  router.push(`/menu07/board/${bno}`);\r\n}\r\n</script>\r\n\r\n<style scoped></style>\r\n","import script from \"./List.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./List.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n  <div class=\"card\">\r\n    <div class=\"card-header\">Read</div>\r\n    <div class=\"card-body\">\r\n      <div v-if=\"board\">\r\n        <div class=\"d-flex\">\r\n          <div>\r\n            <p>bno: {{ board.bno }}</p>\r\n            <p>btitle: {{ board.btitle }}</p>\r\n            <p>bcontent: {{ board.bcontent }}</p>\r\n            <p>mid: {{ board.mid }}</p>\r\n            <p>bdate: {{ new Date(board.bdate).toLocaleDateString() }}</p>\r\n            <p>bhitcount: {{ board.bhitcount }}</p>\r\n            <p v-if=\"board.battachoname\">\r\n              battachoname: {{ board.battachoname }}\r\n              <button @click=\"downloadBattach\" class=\"btn btn-info btn-sm ml-2\">다운로드</button>\r\n            </p>\r\n          </div>\r\n          <div class=\"ml-5\">\r\n            <!-- src에는, '/어쩌구.png' <<이런 형식으로 경로를 설정하면 MPA방식으로 동작하는 방법이다. -->\r\n            <!-- 따라서 SPA개발을 할때는 이미지 리소스도 철저하게 axios를 통해 받아와야 한다. -->\r\n            <img v-if=\"board.battachoname\" :src=\"battach\" width=\"300\" alt=\"\" />\r\n          </div>\r\n        </div>\r\n\r\n        <div>\r\n          <router-link :to=\"`/menu07/board/list?pageNo=${pageNo}`\" class=\"btn btn-info btn-sm mr-2\">목록</router-link>\r\n          <router-link :to=\"`/menu07/board/updateform?bno=${bno}&pageNo=${pageNo}`\" \r\n            class=\"btn btn-info btn-sm mr-2\">수정</router-link>\r\n          <button class=\"btn btn-info btn-sm mr-2\" @click=\"handleRemove\">삭제</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref } from \"vue\";\r\nimport { useRoute, useRouter } from \"vue-router\";\r\nimport apiBoard from \"@/apis/board\";\r\nimport fileDownload from \"js-file-download\"; //파일다운로드는 직접 만들기보단 라이브러리를 쓰는게 훨씬 좋다.\r\n\r\nconst board = ref(null);\r\nconst route = useRoute();\r\nconst router = useRouter();\r\nconst battach = ref(null);\r\n\r\nconst bno = route.query.bno;\r\nconst pageNo = route.query.pageNo;\r\nconst hit = route.query.hit;\r\n\r\nasync function getBoard() {\r\n  // const dbBoard = await apiBoard.readBoard(bno, hit);\r\n  // board.value = dbBoard;\r\n  // // 여기서 이미지도 얻으면 됨.\r\n  // const blob = await apiBoard.downloadBoardAttach(bno);\r\n  // if(blob) { // blob이 뭔가 있다면\r\n  //   battach.value = URL.createObjectURL(blob);// 그냥 blob을 넣으면 안되고, URL.createObjectURL()로 감싸줘야 함.\r\n  //   // 왜냐? 이 데이터는 <img> 태그의 src속성값으로 넣을 예정인데, src에는 url경로가 들어가야 하기 때문에 미리 URL형태로 만들어주는거임.\r\n  // }\r\n\r\n  // await가 두번 나온다. 결국 이미지가 느리게 로딩될 수밖에 없다.\r\n  // 이 속도문제를 해결하려면 어떻게 하면 되는가?\r\n  // 아래처럼 하면 된다.(둘중 하나만 비동기 해도 된다고)\r\n  apiBoard.readBoard(bno, hit).then((data) => {\r\n    board.value = data;\r\n  }); // 비동기로 동작하고 바로 아래 코드 실행\r\n  const blob = await apiBoard.downloadBoardAttach(bno);\r\n  if (blob) {\r\n    battach.value = URL.createObjectURL(blob);\r\n  }\r\n}\r\ngetBoard();\r\n\r\nasync function downloadBattach() {\r\n  const blob = await apiBoard.downloadBoardAttach(bno);\r\n  if (blob) {\r\n    fileDownload(blob, board.value.battachoname);\r\n  }\r\n}\r\n\r\nasync function handleRemove() {\r\n  const result = await apiBoard.deleteBoard(bno);\r\n  if (result === \"success\") { // 삭제에 성공하면 다시 목록으로 돌아간다.\r\n    router.push(`/menu07/board/list?pageNo=${pageNo}`);\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped></style>\r\n","import script from \"./Read.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Read.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n  <div class=\"card\">\r\n    <div class=\"card-header\">UpdateForm</div>\r\n    <div class=\"card-body\">\r\n      <form v-if=\"board\" v-on:submit.prevent=\"handleUpdate\">\r\n        <div class=\"form-group row\">\r\n          <label class=\"col-sm-2 col-form-label\">제목</label>\r\n          <div class=\"col-sm-10\">\r\n            <input type=\"text\" class=\"form-control\" v-model=\"board.btitle\" />\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group row\">\r\n          <label class=\"col-sm-2 col-form-label\">내용</label>\r\n          <div class=\"col-sm-10\">\r\n            <input type=\"text\" class=\"form-control\" v-model=\"board.bcontent\" />\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group row\">\r\n          <label class=\"col-sm-2 col-form-label\">첨부그림</label>\r\n          <div class=\"col-sm-10\">\r\n            <input type=\"file\" class=\"form-control-file\" ref=\"newBattach\" @change=\"previewImg\"/>\r\n          </div>\r\n        </div>\r\n\r\n        <!--어떤 게시물이 첨부됐었는지 보여주기 위해 미리 이미지 보여주기-->\r\n        <div>\r\n          <img :src=\"battach\" width=\"200\" alt=\"\">\r\n        </div>\r\n\r\n        <div class=\"form-group row mt-3\">\r\n          <div class=\"col-sm-12 d-flex justify-content-center\">\r\n            <input type=\"submit\" class=\"btn btn-primary btn-sm mr-2\" value=\"수정\" />\r\n            <input type=\"button\" class=\"btn btn-primary btn-sm\" value=\"취소\" v-on:click=\"handleCancel\" />\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, reactive } from \"vue\";\r\nimport { useRoute, useRouter } from \"vue-router\";\r\nimport apiBoard from \"@/apis/board\";\r\nconst route = useRoute();\r\nconst router = useRouter();\r\n\r\nconst board = ref(null);\r\nconst battach = ref(null);\r\nconst newBattach = ref(null);\r\nconst bno = route.query.bno; // 쿼리스트링으로 넘어온 정보니까.\r\nconst pageNo = route.query.pageNo;\r\n\r\nasync function getBoard() {\r\n  const dbBoard = await apiBoard.readBoard(bno, false);\r\n  board.value = dbBoard;\r\n\r\n  // 메모리상에 있는 data를 마치 url형태로 받아오는 것 또 하기.(왜? img태그의 src값으로 넣고 싶으니까.)\r\n  const blob = await apiBoard.downloadBoardAttach(bno);\r\n  if(blob) battach.value = URL.createObjectURL(blob);\r\n}\r\ngetBoard();\r\n\r\n\r\nasync function handleUpdate() {\r\n  const multipartFormData = new FormData(); // 새로운 FormData 객체 생성\r\n  multipartFormData.append(\"btitle\", board.value.btitle); // 여기서 ref만 사용하는 이유는, 객체 자체를 바꿔치기 해야하기 때문.\r\n  multipartFormData.append(\"bcontent\", board.value.bcontent);\r\n  multipartFormData.append(\"bno\", board.value.bno);\r\n  // 첨부파일은 있을수도 없을수도 있으니 가지치기.\r\n  if(newBattach.value.files.length !== 0) { // 첨부된파일이 하나라도 있다면,\r\n    multipartFormData.append(\"battach\", newBattach.value.files[0]);\r\n  }\r\n  const result = await apiBoard.updateBoard(multipartFormData);\r\n  router.push(`/menu07/board/read?bno=${bno}&pageNo=${pageNo}&hit=false`);\r\n}\r\n\r\nfunction handleCancel() {\r\n  router.push(`/menu07/board/read?bno=${bno}&pageNo=${pageNo}&hit=false`); // 조회수 다시 늘리면 안되니까 hit는 false.\r\n}\r\n\r\nfunction previewImg() { // 수정시 프리뷰 보여주기\r\n  if(newBattach.value.files.length !== 0) {\r\n    battach.value = URL.createObjectURL(newBattach.value.files[0]);\r\n  } else {\r\n    battach.value = null;\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped></style>\r\n","import script from \"./UpdateForm.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./UpdateForm.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n  <div class=\"card\">\r\n    <div class=\"card-header\">WriteForm</div>\r\n    <div class=\"card-body\">\r\n      <form v-on:submit.prevent=\"handleAdd\">\r\n        <div class=\"form-group row\">\r\n          <label class=\"col-sm-2 col-form-label\">제목</label>\r\n          <div class=\"col-sm-10\">\r\n            <input type=\"text\" class=\"form-control\" v-model=\"board.btitle\" />\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group row\">\r\n          <label class=\"col-sm-2 col-form-label\">내용</label>\r\n          <div class=\"col-sm-10\">\r\n            <input type=\"text\" class=\"form-control\" v-model=\"board.bcontent\" />\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group row\">\r\n          <label class=\"col-sm-2 col-form-label\">첨부그림</label>\r\n          <div class=\"col-sm-10\">\r\n            <input type=\"file\" class=\"form-control-file\" ref=\"battach\" />\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group row\">\r\n          <div class=\"col-sm-12 d-flex justify-content-center\">\r\n            <input type=\"submit\" class=\"btn btn-primary btn-sm mr-2\" value=\"추가\" />\r\n            <input type=\"button\" class=\"btn btn-primary btn-sm\" value=\"취소\" v-on:click=\"handleCancel\" />\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\n// 객체형태로 만들어서 쓰는 데이터니까 이번엔 reactive를 사용해보자.\r\nimport { reactive, ref, } from \"vue\";\r\nimport { useRouter } from \"vue-router\";\r\nimport apiBoard from \"@/apis/board\";\r\nconst router = useRouter();\r\nconst board = reactive({\r\n  btitle: \"\",\r\n  bcontent: \"\",\r\n});\r\nconst battach = ref(null); // battach가 가리키고 있는 엘리먼트의 DOM이 생성되고나서는 자동적으로 여기 null값이 해당참조값으로 바뀜\r\n\r\nasync function handleAdd() {\r\n  const multipartFormData = new FormData(); // 새로운 FormData 객체 생성\r\n  multipartFormData.append(\"btitle\", board.btitle);\r\n  multipartFormData.append(\"bcontent\", board.bcontent);\r\n  multipartFormData.append(\"mid\", \"user\");\r\n  // 첨부파일은 있을수도 없을수도 있으니 가지치기.\r\n  if(battach.value.files.length !== 0) { // 첨부된파일이 하나라도 있다면,\r\n    multipartFormData.append(\"battach\", battach.value.files[0]);\r\n  }\r\n  const result = await apiBoard.createBoard(multipartFormData);\r\n  router.push(\"/menu07/board/list\");\r\n  console.log(result);\r\n}\r\nfunction handleCancel() {\r\n  router.push(\"/menu07/board/list\");\r\n}\r\n</script>\r\n\r\n<style scoped></style>\r\n","import script from \"./WriteForm.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./WriteForm.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["module","exports","data","filename","mime","bom","blobData","blob","Blob","type","window","navigator","msSaveBlob","blobURL","URL","createObjectURL","webkitURL","tempLink","document","createElement","style","display","href","setAttribute","download","body","appendChild","click","setTimeout","removeChild","revokeObjectURL","async","getBoardList","pageNo","response","axios","params","result","error","console","log","status","apiAuth","createBoard","multipartFormData","dbBoard","readBoard","bno","hit","board","updateBoard","downloadBoardAttach","responseType","deleteBoard","class","_createBlock","_Transition","name","_createElementVNode","_ctx","_renderSlot","onClick","inheritAttrs","__exports__","render","ref","loading","work","promise","Promise","resolve","reject","handleBtn1","value","then","catch","finally","handleBtn2","alertDialog","alertDialogMessage","user","reactive","id","password","role","email","handleJoin","store","useStore","useRouter","handleLogin","handleLogout","route","useRoute","router","state","userId","push","page","query","apiBoard","range","start","end","numbers","i","changePageNo","watch","newUrl","oldUrl","path","battach","getBoard","downloadBattach","fileDownload","battachoname","handleRemove","newBattach","handleUpdate","FormData","append","btitle","bcontent","files","length","handleCancel","previewImg","handleAdd"],"sourceRoot":""}